%% This BibTeX bibliography file was created using BibDesk.
%% http://bibdesk.sourceforge.net/

%% Created for Elegios at 2018-01-01 15:05:48 +0100 


%% Saved with string encoding Unicode (UTF-8) 



@article{Kaminski2017Reliably-compos,
	Abstract = {Many programming tasks are dramatically simpler when an appropriate domain-specific language can be used to accomplish them. These languages offer a variety of potential advantages, including programming at a higher level of abstraction, custom analyses specific to the problem domain, and the ability to generate very efficient code. But they also suffer many disadvantages as a result of their implementation techniques. Fully separate languages (such as YACC, or SQL) are quite flexible, but these are distinct monolithic entities and thus we are unable to draw on the features of several in combination to accomplish a single task. That is, we cannot compose their domain-specific features. "Embedded" DSLs (such as parsing combinators) accomplish something like a different language, but are actually implemented simply as libraries within a flexible host language. This approach allows different libraries to be imported and used together, enabling composition, but it is limited in analysis and translation capabilities by the host language they are embedded within. A promising combination of these two approaches is to allow a host language to be directly extended with new features (syntactic and semantic.) However, while there are plausible ways to attempt to compose language extensions, they can easily fail, making this approach unreliable. Previous methods of assuring reliable composition impose onerous restrictions, such as throwing out entirely the ability to introduce new analysis. This thesis introduces reliably composable language extensions as a technique for the implementation of DSLs. This technique preserves most of the advantages of both separate and "embedded" DSLs. Unlike many prior approaches to language extension, this technique ensures composition of multiple language extensions will succeed, and preserves strong properties about the behavior of the resulting composed compiler. We define an analysis on language extensions that guarantees the composition of several extensions will be well-defined, and we further define a set of testable properties that ensure the resulting compiler will behave as expected, along with a principle that assigns "blame" for bugs that may ultimately appear as a result of composition. Finally, to concretely compare our approach to our original goals for reliably composable language extension, we use these techniques to develop an extensible C compiler front-end, together with several example composable language extensions.
},
	Author = {Kaminski, Ted},
	Date-Added = {2018-01-01 14:02:15 +0000},
	Date-Modified = {2018-01-01 14:03:54 +0000},
	File = {:Users/elegios/Documents/Mendeley Desktop/Kaminski - 2017 - Reliably composable language extensions.pdf:pdf},
	Title = {{Reliably composable language extensions}},
	Url = {https://conservancy.umn.edu/handle/11299/188954},
	Year = {2017},
	Bdsk-Url-1 = {https://conservancy.umn.edu/handle/11299/188954},
	Bdsk-File-1 = {YnBsaXN0MDDUAQIDBAUGJCVYJHZlcnNpb25YJG9iamVjdHNZJGFyY2hpdmVyVCR0b3ASAAGGoKgHCBMUFRYaIVUkbnVsbNMJCgsMDxJXTlMua2V5c1pOUy5vYmplY3RzViRjbGFzc6INDoACgAOiEBGABIAFgAdccmVsYXRpdmVQYXRoWWFsaWFzRGF0YV8QTi4uLy4uLy4uL0RvY3VtZW50cy9QYXBlcnMvS2FtaW5za2kvUmVsaWFibHkgY29tcG9zYWJsZSBsYW5ndWFnZSBleHRlbnNpb25zLnBkZtIXCxgZV05TLmRhdGFPEQH6AAAAAAH6AAIAAARSb290AAAAAAAAAAAAAAAAAAAAAAAAAAAAAADK7ApgSCsAAANx61EfUmVsaWFibHkgY29tcG9zYWJsZSMzNUI2NEE0LnBkZgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA1tkpNXPIuAAAAAAAAAAAAADAAQAAAkgAAAAAAAAAAAAAAAAAAAACEthbWluc2tpABAACAAAyuv8UAAAABEACAAA1c8GwAAAAAEAFANx61EDceRcAAUfJAAFHyMAAMBDAAIAUVJvb3Q6VXNlcnM6AGVsZWdpb3M6AERvY3VtZW50czoAUGFwZXJzOgBLYW1pbnNraToAUmVsaWFibHkgY29tcG9zYWJsZSMzNUI2NEE0LnBkZgAADgBYACsAUgBlAGwAaQBhAGIAbAB5ACAAYwBvAG0AcABvAHMAYQBiAGwAZQAgAGwAYQBuAGcAdQBhAGcAZQAgAGUAeAB0AGUAbgBzAGkAbwBuAHMALgBwAGQAZgAPAAoABABSAG8AbwB0ABIAU1VzZXJzL2VsZWdpb3MvRG9jdW1lbnRzL1BhcGVycy9LYW1pbnNraS9SZWxpYWJseSBjb21wb3NhYmxlIGxhbmd1YWdlIGV4dGVuc2lvbnMucGRmAAATAAEvAAAVAAIADv//AACABtIbHB0eWiRjbGFzc25hbWVYJGNsYXNzZXNdTlNNdXRhYmxlRGF0YaMdHyBWTlNEYXRhWE5TT2JqZWN00hscIiNcTlNEaWN0aW9uYXJ5oiIgXxAPTlNLZXllZEFyY2hpdmVy0SYnVHJvb3SAAQAIABEAGgAjAC0AMgA3AEAARgBNAFUAYABnAGoAbABuAHEAcwB1AHcAhACOAN8A5ADsAuoC7ALxAvwDBQMTAxcDHgMnAywDOQM8A04DUQNWAAAAAAAAAgEAAAAAAAAAKAAAAAAAAAAAAAAAAAAAA1g=}}

@article{Van-Wyk2010Silver:-An-exte,
	Author = {{Van Wyk}, Eric and Bodin, Derek and Gao, Jimin and Krishnan, Lijesh},
	Date-Added = {2018-01-01 14:01:27 +0000},
	Date-Modified = {2018-01-01 14:03:54 +0000},
	Doi = {10.1016/j.scico.2009.07.004},
	File = {:Users/elegios/Documents/Mendeley Desktop/Van Wyk et al. - 2010 - Silver An extensible attribute grammar system.pdf:pdf},
	Issn = {01676423},
	Journal = {Science of Computer Programming},
	Month = {jan},
	Number = {1-2},
	Pages = {39--54},
	Title = {{Silver: An extensible attribute grammar system}},
	Url = {http://linkinghub.elsevier.com/retrieve/pii/S0167642309001099},
	Volume = {75},
	Year = {2010},
	Bdsk-Url-1 = {http://linkinghub.elsevier.com/retrieve/pii/S0167642309001099},
	Bdsk-Url-2 = {https://dx.doi.org/10.1016/j.scico.2009.07.004},
	Bdsk-File-1 = {YnBsaXN0MDDUAQIDBAUGJCVYJHZlcnNpb25YJG9iamVjdHNZJGFyY2hpdmVyVCR0b3ASAAGGoKgHCBMUFRYaIVUkbnVsbNMJCgsMDxJXTlMua2V5c1pOUy5vYmplY3RzViRjbGFzc6INDoACgAOiEBGABIAFgAdccmVsYXRpdmVQYXRoWWFsaWFzRGF0YV8QUy4uLy4uLy4uL0RvY3VtZW50cy9QYXBlcnMvVmFuIFd5ay9TaWx2ZXIgQW4gZXh0ZW5zaWJsZSBhdHRyaWJ1dGUgZ3JhbW1hciBzeXN0ZW0ucGRm0hcLGBlXTlMuZGF0YU8RAggAAAAAAggAAgAABFJvb3QAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMrsCmBIKwAAA3HrNx9TaWx2ZXIgQW4gZXh0ZW5zaWJsIzM1QjRFNkYucGRmAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADW05v1c7pOAAAAAAAAAAAAAMABAAACSAAAAAAAAAAAAAAAAAAAAAHVmFuIFd5awAAEAAIAADK6/xQAAAAEQAIAADVzs0YAAAAAQAUA3HrNwNx5FwABR8kAAUfIwAAwEMAAgBQUm9vdDpVc2VyczoAZWxlZ2lvczoARG9jdW1lbnRzOgBQYXBlcnM6AFZhbiBXeWs6AFNpbHZlciBBbiBleHRlbnNpYmwjMzVCNEU2Ri5wZGYADgBkADEAUwBpAGwAdgBlAHIAIABBAG4AIABlAHgAdABlAG4AcwBpAGIAbABlACAAYQB0AHQAcgBpAGIAdQB0AGUAIABnAHIAYQBtAG0AYQByACAAcwB5AHMAdABlAG0ALgBwAGQAZgAPAAoABABSAG8AbwB0ABIAWFVzZXJzL2VsZWdpb3MvRG9jdW1lbnRzL1BhcGVycy9WYW4gV3lrL1NpbHZlciBBbiBleHRlbnNpYmxlIGF0dHJpYnV0ZSBncmFtbWFyIHN5c3RlbS5wZGYAEwABLwAAFQACAA7//wAAgAbSGxwdHlokY2xhc3NuYW1lWCRjbGFzc2VzXU5TTXV0YWJsZURhdGGjHR8gVk5TRGF0YVhOU09iamVjdNIbHCIjXE5TRGljdGlvbmFyeaIiIF8QD05TS2V5ZWRBcmNoaXZlctEmJ1Ryb290gAEACAARABoAIwAtADIANwBAAEYATQBVAGAAZwBqAGwAbgBxAHMAdQB3AIQAjgDkAOkA8QL9Av8DBAMPAxgDJgMqAzEDOgM/A0wDTwNhA2QDaQAAAAAAAAIBAAAAAAAAACgAAAAAAAAAAAAAAAAAAANr}}

@inproceedings{Van-Wyk2007Context-aware-s,
	Address = {New York, New York, USA},
	Author = {{Van Wyk}, Eric R. and Schwerdfeger, August C.},
	Booktitle = {Proceedings of the 6th international conference on Generative programming and component engineering - GPCE '07},
	Date-Added = {2018-01-01 14:01:27 +0000},
	Date-Modified = {2018-01-01 14:03:54 +0000},
	Doi = {10.1145/1289971.1289983},
	File = {:Users/elegios/Documents/Mendeley Desktop/Van Wyk, Schwerdfeger - 2007 - Context-aware scanning for parsing extensible languages.pdf:pdf},
	Isbn = {9781595938558},
	Keywords = {context-aware scanning,extensible languages},
	Pages = {63},
	Publisher = {ACM Press},
	Title = {{Context-aware scanning for parsing extensible languages}},
	Url = {http://portal.acm.org/citation.cfm?doid=1289971.1289983},
	Year = {2007},
	Bdsk-Url-1 = {http://portal.acm.org/citation.cfm?doid=1289971.1289983},
	Bdsk-Url-2 = {https://dx.doi.org/10.1145/1289971.1289983},
	Bdsk-File-1 = {YnBsaXN0MDDUAQIDBAUGJCVYJHZlcnNpb25YJG9iamVjdHNZJGFyY2hpdmVyVCR0b3ASAAGGoKgHCBMUFRYaIVUkbnVsbNMJCgsMDxJXTlMua2V5c1pOUy5vYmplY3RzViRjbGFzc6INDoACgAOiEBGABIAFgAdccmVsYXRpdmVQYXRoWWFsaWFzRGF0YV8QXS4uLy4uLy4uL0RvY3VtZW50cy9QYXBlcnMvVmFuIFd5ay9Db250ZXh0LWF3YXJlIHNjYW5uaW5nIGZvciBwYXJzaW5nIGV4dGVuc2libGUgbGFuZ3VhZ2VzLnBkZtIXCxgZV05TLmRhdGFPEQImAAAAAAImAAIAAARSb290AAAAAAAAAAAAAAAAAAAAAAAAAAAAAADK7ApgSCsAAANx6zcfQ29udGV4dC1hd2FyZSBzY2FubiMzNUI1RDFFLnBkZgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA1tdHtXPD/8AAAAAAAAAAAADAAQAAAkgAAAAAAAAAAAAAAAAAAAAB1ZhbiBXeWsAABAACAAAyuv8UAAAABEACAAA1c7z3wAAAAEAFANx6zcDceRcAAUfJAAFHyMAAMBDAAIAUFJvb3Q6VXNlcnM6AGVsZWdpb3M6AERvY3VtZW50czoAUGFwZXJzOgBWYW4gV3lrOgBDb250ZXh0LWF3YXJlIHNjYW5uIzM1QjVEMUUucGRmAA4AeAA7AEMAbwBuAHQAZQB4AHQALQBhAHcAYQByAGUAIABzAGMAYQBuAG4AaQBuAGcAIABmAG8AcgAgAHAAYQByAHMAaQBuAGcAIABlAHgAdABlAG4AcwBpAGIAbABlACAAbABhAG4AZwB1AGEAZwBlAHMALgBwAGQAZgAPAAoABABSAG8AbwB0ABIAYlVzZXJzL2VsZWdpb3MvRG9jdW1lbnRzL1BhcGVycy9WYW4gV3lrL0NvbnRleHQtYXdhcmUgc2Nhbm5pbmcgZm9yIHBhcnNpbmcgZXh0ZW5zaWJsZSBsYW5ndWFnZXMucGRmABMAAS8AABUAAgAO//8AAIAG0hscHR5aJGNsYXNzbmFtZVgkY2xhc3Nlc11OU011dGFibGVEYXRhox0fIFZOU0RhdGFYTlNPYmplY3TSGxwiI1xOU0RpY3Rpb25hcnmiIiBfEA9OU0tleWVkQXJjaGl2ZXLRJidUcm9vdIABAAgAEQAaACMALQAyADcAQABGAE0AVQBgAGcAagBsAG4AcQBzAHUAdwCEAI4A7gDzAPsDJQMnAywDNwNAA04DUgNZA2IDZwN0A3cDiQOMA5EAAAAAAAACAQAAAAAAAAAoAAAAAAAAAAAAAAAAAAADkw==}}

@inproceedings{Lorenzen2016Sound-type-depe,
	Abstract = {Syntactic language extensions can introduce new facilities into a programming language while requiring little implementation effort and modest changes to the compiler. It is typical to desugar language extensions in a distinguished compiler phase after parsing or type checking, not affecting any of the later compiler phases. If desugaring happens before type checking, the desugaring cannot depend on typing information and type errors are reported in terms of the generated code. If desugaring happens after type checking, the code generated by the desugaring is not type checked and may introduce vulnerabilities. Both options are undesirable. We propose a system for syntactic extensibility where desugaring happens after type checking and desugarings are guaranteed to only generate well-typed code. A major novelty of our work is that desugarings operate on typing derivations instead of plain syntax trees. This provides desugarings access to typing information and forms the basis for the soundness guarantee we provide, namely that a desugaring generates a valid typing derivation. We have implemented our system for syntactic extensibility in a language-independent fashion and instantiated it for a substantial subset of Java, including generics and inheritance. We provide a sound Java extension for Scala-like for-comprehensions.},
	Address = {New York, New York, USA},
	Author = {Lorenzen, Florian and Erdweg, Sebastian},
	Booktitle = {Proceedings of the 43rd Annual ACM SIGPLAN-SIGACT Symposium on Principles of Programming Languages - POPL 2016},
	Date-Added = {2018-01-01 14:00:38 +0000},
	Date-Modified = {2018-01-01 14:03:54 +0000},
	Doi = {10.1145/2837614.2837644},
	File = {:Users/elegios/Documents/Mendeley Desktop/Lorenzen, Erdweg - 2016 - Sound type-dependent syntactic language extension(2).pdf:pdf},
	Isbn = {9781450335492},
	Number = {1},
	Pages = {204--216},
	Publisher = {ACM Press},
	Title = {{Sound type-dependent syntactic language extension}},
	Url = {http://dl.acm.org/citation.cfm?doid=2837614.2837644},
	Volume = {51},
	Year = {2016},
	Bdsk-Url-1 = {http://dl.acm.org/citation.cfm?doid=2837614.2837644},
	Bdsk-Url-2 = {https://dx.doi.org/10.1145/2837614.2837644},
	Bdsk-File-1 = {YnBsaXN0MDDUAQIDBAUGJCVYJHZlcnNpb25YJG9iamVjdHNZJGFyY2hpdmVyVCR0b3ASAAGGoKgHCBMUFRYaIVUkbnVsbNMJCgsMDxJXTlMua2V5c1pOUy5vYmplY3RzViRjbGFzc6INDoACgAOiEBGABIAFgAdccmVsYXRpdmVQYXRoWWFsaWFzRGF0YV8QWC4uLy4uLy4uL0RvY3VtZW50cy9QYXBlcnMvTG9yZW56ZW4vU291bmQgdHlwZS1kZXBlbmRlbnQgc3ludGFjdGljIGxhbmd1YWdlIGV4dGVuc2lvbi5wZGbSFwsYGVdOUy5kYXRhTxECGAAAAAACGAACAAAEUm9vdAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAyuwKYEgrAAADcegzH1NvdW5kIHR5cGUtZGVwZW5kZW4jMzQ5NzI5Mi5wZGYAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAANJcpLVcDzTAAAAAAAAAAAAAwAEAAAJIAAAAAAAAAAAAAAAAAAAAAhMb3JlbnplbgAQAAgAAMrr/FAAAAARAAgAANVwILMAAAABABQDcegzA3HkXAAFHyQABR8jAADAQwACAFFSb290OlVzZXJzOgBlbGVnaW9zOgBEb2N1bWVudHM6AFBhcGVyczoATG9yZW56ZW46AFNvdW5kIHR5cGUtZGVwZW5kZW4jMzQ5NzI5Mi5wZGYAAA4AbAA1AFMAbwB1AG4AZAAgAHQAeQBwAGUALQBkAGUAcABlAG4AZABlAG4AdAAgAHMAeQBuAHQAYQBjAHQAaQBjACAAbABhAG4AZwB1AGEAZwBlACAAZQB4AHQAZQBuAHMAaQBvAG4ALgBwAGQAZgAPAAoABABSAG8AbwB0ABIAXVVzZXJzL2VsZWdpb3MvRG9jdW1lbnRzL1BhcGVycy9Mb3Jlbnplbi9Tb3VuZCB0eXBlLWRlcGVuZGVudCBzeW50YWN0aWMgbGFuZ3VhZ2UgZXh0ZW5zaW9uLnBkZgAAEwABLwAAFQACAA7//wAAgAbSGxwdHlokY2xhc3NuYW1lWCRjbGFzc2VzXU5TTXV0YWJsZURhdGGjHR8gVk5TRGF0YVhOU09iamVjdNIbHCIjXE5TRGljdGlvbmFyeaIiIF8QD05TS2V5ZWRBcmNoaXZlctEmJ1Ryb290gAEACAARABoAIwAtADIANwBAAEYATQBVAGAAZwBqAGwAbgBxAHMAdQB3AIQAjgDpAO4A9gMSAxQDGQMkAy0DOwM/A0YDTwNUA2EDZAN2A3kDfgAAAAAAAAIBAAAAAAAAACgAAAAAAAAAAAAAAAAAAAOA}}

@book{Silkensen2013Well-Typed-Isla,
	Abstract = {This paper addresses the problem of specifying and parsing the syntax of domain-specific languages (DSLs) in a modular, user-friendly way. We want to enable the design of composable DSLs that combine the natural syntax of external DSLs with the easy implementation of internal DSLs. The challenge in parsing these DSLs is that the composition of several languages is likely to contain ambiguities. We present the design of a system that uses a type-oriented variant of island parsing to efficiently parse the syntax of composable DSLs. In particular, we argue that the running time of type-oriented island parsing doesn't depend on the number of DSLs imported. We also show how to use our tool to implement DSLs on top of a host language such as Typed Racket.},
	Author = {Silkensen, Erik and Siek, Jeremy},
	Booktitle = {Trends in Functional Programming: 13th International Symposium, TFP 2012, St. Andrews, UK, June 12-14, 2012, Revised Selected Papers},
	Date-Added = {2018-01-01 13:59:51 +0000},
	Date-Modified = {2018-01-01 14:03:54 +0000},
	Doi = {10.1007/978-3-642-40447-4_5},
	Editor = {Loidl, Hans-Wolfgang and Pe{\~{n}}a, Ricardo},
	File = {:Users/elegios/Documents/Mendeley Desktop/Silkensen, Siek - 2013 - Well-Typed Islands Parse Faster.pdf:pdf},
	Isbn = {978-3-642-40447-4},
	Pages = {69--84},
	Publisher = {Springer, Berlin, Heidelberg},
	Title = {{Well-Typed Islands Parse Faster}},
	Url = {http://link.springer.com/10.1007/978-3-642-40447-4{\_}5},
	Year = {2013},
	Bdsk-Url-1 = {http://link.springer.com/10.1007/978-3-642-40447-4%7B%5C_%7D5},
	Bdsk-Url-2 = {https://dx.doi.org/10.1007/978-3-642-40447-4_5},
	Bdsk-File-1 = {YnBsaXN0MDDUAQIDBAUGJCVYJHZlcnNpb25YJG9iamVjdHNZJGFyY2hpdmVyVCR0b3ASAAGGoKgHCBMUFRYaIVUkbnVsbNMJCgsMDxJXTlMua2V5c1pOUy5vYmplY3RzViRjbGFzc6INDoACgAOiEBGABIAFgAdccmVsYXRpdmVQYXRoWWFsaWFzRGF0YV8QRy4uLy4uLy4uL0RvY3VtZW50cy9QYXBlcnMvU2lsa2Vuc2VuL1dlbGwtVHlwZWQgSXNsYW5kcyBQYXJzZSBGYXN0ZXIucGRm0hcLGBlXTlMuZGF0YU8RAeQAAAAAAeQAAgAABFJvb3QAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMrsCmBIKwAAA3Hn7R9XZWxsLVR5cGVkIElzbGFuZHMgIzM1RDQ4OTkucGRmAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADXUiZ1eBGygAAAAAAAAAAAAMABAAACSAAAAAAAAAAAAAAAAAAAAAJU2lsa2Vuc2VuAAAQAAgAAMrr/FAAAAARAAgAANXgKqoAAAABABQDceftA3HkXAAFHyQABR8jAADAQwACAFJSb290OlVzZXJzOgBlbGVnaW9zOgBEb2N1bWVudHM6AFBhcGVyczoAU2lsa2Vuc2VuOgBXZWxsLVR5cGVkIElzbGFuZHMgIzM1RDQ4OTkucGRmAA4ASAAjAFcAZQBsAGwALQBUAHkAcABlAGQAIABJAHMAbABhAG4AZABzACAAUABhAHIAcwBlACAARgBhAHMAdABlAHIALgBwAGQAZgAPAAoABABSAG8AbwB0ABIATFVzZXJzL2VsZWdpb3MvRG9jdW1lbnRzL1BhcGVycy9TaWxrZW5zZW4vV2VsbC1UeXBlZCBJc2xhbmRzIFBhcnNlIEZhc3Rlci5wZGYAEwABLwAAFQACAA7//wAAgAbSGxwdHlokY2xhc3NuYW1lWCRjbGFzc2VzXU5TTXV0YWJsZURhdGGjHR8gVk5TRGF0YVhOU09iamVjdNIbHCIjXE5TRGljdGlvbmFyeaIiIF8QD05TS2V5ZWRBcmNoaXZlctEmJ1Ryb290gAEACAARABoAIwAtADIANwBAAEYATQBVAGAAZwBqAGwAbgBxAHMAdQB3AIQAjgDYAN0A5QLNAs8C1ALfAugC9gL6AwEDCgMPAxwDHwMxAzQDOQAAAAAAAAIBAAAAAAAAACgAAAAAAAAAAAAAAAAAAAM7}}

@article{Erdweg2013Layout-sensitiv,
	Abstract = {The theory of context-free languages is well-understood and context-free parsers can be used as off-the-shelf tools in practice. In particular, to use a context-free parser framework, a user does not need to understand its internals but can specify a language declaratively as a grammar. However, many languages in practice are not context-free. One particularly important class of such languages is layout-sensitive languages, in which the structure of code depends on indentation and whitespace. For example, Python, Haskell, F{\#}, and Markdown use indentation instead of curly braces to determine the block structure of code. Their parsers (and lexers) are not declaratively specified but hand-tuned to account for layout-sensitivity. To support declarative specifications of layout-sensitive languages, we propose a parsing framework in which a user can annotate layout in a grammar. Annotations take the form of constraints on the relative positioning of tokens in the parsed subtrees. For example, a user can declare that a block consists of statements that all start on the same column. We have integrated layout constraints into SDF and implemented a layout-sensitive generalized parser as an extension of generalized LR parsing. We evaluate the correctness and performance of our parser by parsing 33 290 open-source Haskell files. Layout-sensitive generalized parsing is easy to use, and its performance overhead compared to layout-insensitive parsing is small enough for practical application.},
	Author = {Erdweg, Sebastian and Rendel, Tillmann and K{\"{a}}stner, Christian and Ostermann, Klaus},
	Date-Added = {2018-01-01 13:59:18 +0000},
	Date-Modified = {2018-01-01 14:03:54 +0000},
	Doi = {10.1007/978-3-642-36089-3_14},
	File = {:Users/elegios/Documents/Mendeley Desktop/Erdweg et al. - 2013 - Layout-sensitive generalized parsing.pdf:pdf},
	Isbn = {9783642360886},
	Issn = {03029743},
	Journal = {Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)},
	Pages = {244--263},
	Title = {{Layout-sensitive generalized parsing}},
	Volume = {7745 LNCS},
	Year = {2013},
	Bdsk-Url-1 = {https://dx.doi.org/10.1007/978-3-642-36089-3_14},
	Bdsk-File-1 = {YnBsaXN0MDDUAQIDBAUGJCVYJHZlcnNpb25YJG9iamVjdHNZJGFyY2hpdmVyVCR0b3ASAAGGoKgHCBMUFRYaIVUkbnVsbNMJCgsMDxJXTlMua2V5c1pOUy5vYmplY3RzViRjbGFzc6INDoACgAOiEBGABIAFgAdccmVsYXRpdmVQYXRoWWFsaWFzRGF0YV8QSS4uLy4uLy4uL0RvY3VtZW50cy9QYXBlcnMvRXJkd2VnL0xheW91dC1zZW5zaXRpdmUgZ2VuZXJhbGl6ZWQgcGFyc2luZy5wZGbSFwsYGVdOUy5kYXRhTxEB6gAAAAAB6gACAAAEUm9vdAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAyuwKYEgrAAADcefJH0xheW91dC1zZW5zaXRpdmUgZ2UjMzU3QUY0MC5wZGYAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAANXr0DVwHaeAAAAAAAAAAAAAwAEAAAJIAAAAAAAAAAAAAAAAAAAAAZFcmR3ZWcAEAAIAADK6/xQAAAAEQAIAADVwFp+AAAAAQAUA3HnyQNx5FwABR8kAAUfIwAAwEMAAgBPUm9vdDpVc2VyczoAZWxlZ2lvczoARG9jdW1lbnRzOgBQYXBlcnM6AEVyZHdlZzoATGF5b3V0LXNlbnNpdGl2ZSBnZSMzNTdBRjQwLnBkZgAADgBSACgATABhAHkAbwB1AHQALQBzAGUAbgBzAGkAdABpAHYAZQAgAGcAZQBuAGUAcgBhAGwAaQB6AGUAZAAgAHAAYQByAHMAaQBuAGcALgBwAGQAZgAPAAoABABSAG8AbwB0ABIATlVzZXJzL2VsZWdpb3MvRG9jdW1lbnRzL1BhcGVycy9FcmR3ZWcvTGF5b3V0LXNlbnNpdGl2ZSBnZW5lcmFsaXplZCBwYXJzaW5nLnBkZgATAAEvAAAVAAIADv//AACABtIbHB0eWiRjbGFzc25hbWVYJGNsYXNzZXNdTlNNdXRhYmxlRGF0YaMdHyBWTlNEYXRhWE5TT2JqZWN00hscIiNcTlNEaWN0aW9uYXJ5oiIgXxAPTlNLZXllZEFyY2hpdmVy0SYnVHJvb3SAAQAIABEAGgAjAC0AMgA3AEAARgBNAFUAYABnAGoAbABuAHEAcwB1AHcAhACOANoA3wDnAtUC1wLcAucC8AL+AwIDCQMSAxcDJAMnAzkDPANBAAAAAAAAAgEAAAAAAAAAKAAAAAAAAAAAAAAAAAAAA0M=}}

@inproceedings{Stansifer2014Romeo,
	Abstract = {Current languages for safely manipulating values with names only support term languages with simple binding syntax. As a result, no tools exist to safely manipulate code written in those languages for which name problems are the most challenging. We address this problem with Romeo, a language that respects $\alpha$-equivalence on its values, and which has access to a rich specification language for binding, inspired by attribute grammars. Our work has the complex-binding support of David Herman's $\lambda$m, but is a full-fledged binding-safe language like Pure FreshML.},
	Address = {New York, New York, USA},
	Author = {Stansifer, Paul and Wand, Mitchell},
	Booktitle = {Proceedings of the 19th ACM SIGPLAN international conference on Functional programming - ICFP '14},
	Date-Added = {2018-01-01 13:58:02 +0000},
	Date-Modified = {2018-01-01 14:03:54 +0000},
	Doi = {10.1145/2628136.2628162},
	File = {:Users/elegios/Documents/Mendeley Desktop/Stansifer, Wand - 2014 - Romeo.pdf:pdf},
	Isbn = {9781450328739},
	Number = {9},
	Pages = {53--65},
	Publisher = {ACM Press},
	Title = {{Romeo}},
	Url = {http://dl.acm.org/citation.cfm?doid=2628136.2628162},
	Volume = {49},
	Year = {2014},
	Bdsk-Url-1 = {http://dl.acm.org/citation.cfm?doid=2628136.2628162},
	Bdsk-Url-2 = {https://dx.doi.org/10.1145/2628136.2628162},
	Bdsk-File-1 = {YnBsaXN0MDDUAQIDBAUGJCVYJHZlcnNpb25YJG9iamVjdHNZJGFyY2hpdmVyVCR0b3ASAAGGoKgHCBMUFRYaIVUkbnVsbNMJCgsMDxJXTlMua2V5c1pOUy5vYmplY3RzViRjbGFzc6INDoACgAOiEBGABIAFgAdccmVsYXRpdmVQYXRoWWFsaWFzRGF0YV8QLS4uLy4uLy4uL0RvY3VtZW50cy9QYXBlcnMvU3RhbnNpZmVyL1JvbWVvLnBkZtIXCxgZV05TLmRhdGFPEQGAAAAAAAGAAAIAAARSb290AAAAAAAAAAAAAAAAAAAAAAAAAAAAAADK7ApgSCsAAANx57cJUm9tZW8ucGRmAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA1s4ktXNvWQAAAAAAAAAAAADAAQAAAkgAAAAAAAAAAAAAAAAAAAACVN0YW5zaWZlcgAAEAAIAADK6/xQAAAAEQAIAADVzaFEAAAAAQAUA3HntwNx5FwABR8kAAUfIwAAwEMAAgA8Um9vdDpVc2VyczoAZWxlZ2lvczoARG9jdW1lbnRzOgBQYXBlcnM6AFN0YW5zaWZlcjoAUm9tZW8ucGRmAA4AFAAJAFIAbwBtAGUAbwAuAHAAZABmAA8ACgAEAFIAbwBvAHQAEgAyVXNlcnMvZWxlZ2lvcy9Eb2N1bWVudHMvUGFwZXJzL1N0YW5zaWZlci9Sb21lby5wZGYAEwABLwAAFQACAA7//wAAgAbSGxwdHlokY2xhc3NuYW1lWCRjbGFzc2VzXU5TTXV0YWJsZURhdGGjHR8gVk5TRGF0YVhOU09iamVjdNIbHCIjXE5TRGljdGlvbmFyeaIiIF8QD05TS2V5ZWRBcmNoaXZlctEmJ1Ryb290gAEACAARABoAIwAtADIANwBAAEYATQBVAGAAZwBqAGwAbgBxAHMAdQB3AIQAjgC+AMMAywJPAlECVgJhAmoCeAJ8AoMCjAKRAp4CoQKzArYCuwAAAAAAAAIBAAAAAAAAACgAAAAAAAAAAAAAAAAAAAK9}}

@article{Herman2010A-Theory-of-Typ,
	Abstract = {We present the $\lambda$m-calculus, a semantics for a language of hygienic macros with a non-trivial theory. Unlike Scheme, where programs must be macro- expanded to be analyzed, our semantics admits reasoning about programs as they appear to programmers. Our contributions include a semantics of hygienic macro expansion, a formal definition of $\alpha$-equivalence that is independent of expansion, and a proof that expansion preserves $\alpha$-equivalence. The key technical component of our language is a type system similar to Culpepper and Felleisens shape types, but with the novel contribution of binding signature types, which specify the bindings and scope of a macros arguments.},
	Author = {Herman, David and Wand, Mitchell},
	Date-Added = {2018-01-01 13:56:04 +0000},
	Date-Modified = {2018-01-01 14:03:54 +0000},
	Doi = {10.1007/978-3-540-78739-6_4},
	File = {:Users/elegios/Documents/Mendeley Desktop/Herman, Wand - 2010 - A Theory of Typed Hygienic Macros.pdf:pdf},
	Isbn = {3540787380},
	Issn = {03029743},
	Journal = {Proceedings of the 17th European Symposium on Programming},
	Pages = {48},
	Title = {{A Theory of Typed Hygienic Macros}},
	Url = {http://www.springerlink.com/index/V03K0734Q7217R35.pdf},
	Volume = {4960},
	Year = {2010},
	Bdsk-Url-1 = {http://www.springerlink.com/index/V03K0734Q7217R35.pdf},
	Bdsk-Url-2 = {https://dx.doi.org/10.1007/978-3-540-78739-6_4},
	Bdsk-File-1 = {YnBsaXN0MDDUAQIDBAUGJCVYJHZlcnNpb25YJG9iamVjdHNZJGFyY2hpdmVyVCR0b3ASAAGGoKgHCBMUFRYaIVUkbnVsbNMJCgsMDxJXTlMua2V5c1pOUy5vYmplY3RzViRjbGFzc6INDoACgAOiEBGABIAFgAdccmVsYXRpdmVQYXRoWWFsaWFzRGF0YV8QRi4uLy4uLy4uL0RvY3VtZW50cy9QYXBlcnMvSGVybWFuL0EgVGhlb3J5IG9mIFR5cGVkIEh5Z2llbmljIE1hY3Jvcy5wZGbSFwsYGVdOUy5kYXRhTxEB4gAAAAAB4gACAAAEUm9vdAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAyuwKYEgrAAADceeOH0EgVGhlb3J5IG9mIFR5cGVkIEgjMzQ3OEQ4NC5wZGYAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAANHjYTVZXPGAAAAAAAAAAAAAwAEAAAJIAAAAAAAAAAAAAAAAAAAAAZIZXJtYW4AEAAIAADK6/xQAAAAEQAIAADVZVemAAAAAQAUA3HnjgNx5FwABR8kAAUfIwAAwEMAAgBPUm9vdDpVc2VyczoAZWxlZ2lvczoARG9jdW1lbnRzOgBQYXBlcnM6AEhlcm1hbjoAQSBUaGVvcnkgb2YgVHlwZWQgSCMzNDc4RDg0LnBkZgAADgBMACUAQQAgAFQAaABlAG8AcgB5ACAAbwBmACAAVAB5AHAAZQBkACAASAB5AGcAaQBlAG4AaQBjACAATQBhAGMAcgBvAHMALgBwAGQAZgAPAAoABABSAG8AbwB0ABIAS1VzZXJzL2VsZWdpb3MvRG9jdW1lbnRzL1BhcGVycy9IZXJtYW4vQSBUaGVvcnkgb2YgVHlwZWQgSHlnaWVuaWMgTWFjcm9zLnBkZgAAEwABLwAAFQACAA7//wAAgAbSGxwdHlokY2xhc3NuYW1lWCRjbGFzc2VzXU5TTXV0YWJsZURhdGGjHR8gVk5TRGF0YVhOU09iamVjdNIbHCIjXE5TRGljdGlvbmFyeaIiIF8QD05TS2V5ZWRBcmNoaXZlctEmJ1Ryb290gAEACAARABoAIwAtADIANwBAAEYATQBVAGAAZwBqAGwAbgBxAHMAdQB3AIQAjgDXANwA5ALKAswC0QLcAuUC8wL3Av4DBwMMAxkDHAMuAzEDNgAAAAAAAAIBAAAAAAAAACgAAAAAAAAAAAAAAAAAAAM4}}

@article{Heering1989The-syntax-defi,
	Author = {Heering, J. and Hendriks, P. R. H. and Klint, P. and Rekers, J.},
	Date-Added = {2018-01-01 13:54:16 +0000},
	Date-Modified = {2018-01-01 14:03:54 +0000},
	Doi = {10.1145/71605.71607},
	File = {:Users/elegios/Documents/Mendeley Desktop/Heering et al. - 1989 - The syntax definition formalism SDF---reference manual---.pdf:pdf},
	Issn = {03621340},
	Journal = {ACM SIGPLAN Notices},
	Month = {nov},
	Number = {11},
	Pages = {43--75},
	Publisher = {ACM},
	Title = {{The syntax definition formalism SDF---reference manual---}},
	Url = {http://portal.acm.org/citation.cfm?doid=71605.71607},
	Volume = {24},
	Year = {1989},
	Bdsk-Url-1 = {http://portal.acm.org/citation.cfm?doid=71605.71607},
	Bdsk-Url-2 = {https://dx.doi.org/10.1145/71605.71607},
	Bdsk-File-1 = {YnBsaXN0MDDUAQIDBAUGJCVYJHZlcnNpb25YJG9iamVjdHNZJGFyY2hpdmVyVCR0b3ASAAGGoKgHCBMUFRYaIVUkbnVsbNMJCgsMDxJXTlMua2V5c1pOUy5vYmplY3RzViRjbGFzc6INDoACgAOiEBGABIAFgAdccmVsYXRpdmVQYXRoWWFsaWFzRGF0YV8QXy4uLy4uLy4uL0RvY3VtZW50cy9QYXBlcnMvSGVlcmluZy9UaGUgc3ludGF4IGRlZmluaXRpb24gZm9ybWFsaXNtIFNERi0tLXJlZmVyZW5jZSBtYW51YWwtLS0ucGRm0hcLGBlXTlMuZGF0YU8RAiwAAAAAAiwAAgAABFJvb3QAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMrsCmBIKwAAA3Hneh9UaGUgc3ludGF4IGRlZmluaXRpIzM1QjJERDEucGRmAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADWy3R1c2aowAAAAAAAAAAAAMABAAACSAAAAAAAAAAAAAAAAAAAAAHSGVlcmluZwAAEAAIAADK6/xQAAAAEQAIAADVzX6DAAAAAQAUA3HnegNx5FwABR8kAAUfIwAAwEMAAgBQUm9vdDpVc2VyczoAZWxlZ2lvczoARG9jdW1lbnRzOgBQYXBlcnM6AEhlZXJpbmc6AFRoZSBzeW50YXggZGVmaW5pdGkjMzVCMkREMS5wZGYADgB8AD0AVABoAGUAIABzAHkAbgB0AGEAeAAgAGQAZQBmAGkAbgBpAHQAaQBvAG4AIABmAG8AcgBtAGEAbABpAHMAbQAgAFMARABGAC0ALQAtAHIAZQBmAGUAcgBlAG4AYwBlACAAbQBhAG4AdQBhAGwALQAtAC0ALgBwAGQAZgAPAAoABABSAG8AbwB0ABIAZFVzZXJzL2VsZWdpb3MvRG9jdW1lbnRzL1BhcGVycy9IZWVyaW5nL1RoZSBzeW50YXggZGVmaW5pdGlvbiBmb3JtYWxpc20gU0RGLS0tcmVmZXJlbmNlIG1hbnVhbC0tLS5wZGYAEwABLwAAFQACAA7//wAAgAbSGxwdHlokY2xhc3NuYW1lWCRjbGFzc2VzXU5TTXV0YWJsZURhdGGjHR8gVk5TRGF0YVhOU09iamVjdNIbHCIjXE5TRGljdGlvbmFyeaIiIF8QD05TS2V5ZWRBcmNoaXZlctEmJ1Ryb290gAEACAARABoAIwAtADIANwBAAEYATQBVAGAAZwBqAGwAbgBxAHMAdQB3AIQAjgDwAPUA/QMtAy8DNAM/A0gDVgNaA2EDagNvA3wDfwORA5QDmQAAAAAAAAIBAAAAAAAAACgAAAAAAAAAAAAAAAAAAAOb}}

@inproceedings{Matsakis2014The-rust-langua,
	Address = {New York, New York, USA},
	Author = {Matsakis, Nicholas D. and {Klock II}, Felix S.},
	Booktitle = {Proceedings of the 2014 ACM SIGAda annual conference on High integrity language technology - HILT '14},
	Date-Added = {2018-01-01 13:52:14 +0000},
	Date-Modified = {2018-01-01 14:03:54 +0000},
	Doi = {10.1145/2663171.2663188},
	File = {:Users/elegios/Documents/Mendeley Desktop/Matsakis, Klock II - 2014 - The rust language.pdf:pdf},
	Isbn = {9781450332170},
	Pages = {103--104},
	Publisher = {ACM Press},
	Title = {{The rust language}},
	Url = {http://dl.acm.org/citation.cfm?doid=2663171.2663188},
	Year = {2014},
	Bdsk-Url-1 = {http://dl.acm.org/citation.cfm?doid=2663171.2663188},
	Bdsk-Url-2 = {https://dx.doi.org/10.1145/2663171.2663188},
	Bdsk-File-1 = {YnBsaXN0MDDUAQIDBAUGJCVYJHZlcnNpb25YJG9iamVjdHNZJGFyY2hpdmVyVCR0b3ASAAGGoKgHCBMUFRYaIVUkbnVsbNMJCgsMDxJXTlMua2V5c1pOUy5vYmplY3RzViRjbGFzc6INDoACgAOiEBGABIAFgAdccmVsYXRpdmVQYXRoWWFsaWFzRGF0YV8QOC4uLy4uLy4uL0RvY3VtZW50cy9QYXBlcnMvTWF0c2FraXMvVGhlIHJ1c3QgbGFuZ3VhZ2UucGRm0hcLGBlXTlMuZGF0YU8RAa4AAAAAAa4AAgAABFJvb3QAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMrsCmBIKwAAA3HnWhVUaGUgcnVzdCBsYW5ndWFnZS5wZGYAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADcedC1m/7zwAAAAAAAAAAAAMABAAACSAAAAAAAAAAAAAAAAAAAAAITWF0c2FraXMAEAAIAADK6/xQAAAAEQAIAADWb+2/AAAAAQAUA3HnWgNx5FwABR8kAAUfIwAAwEMAAgBHUm9vdDpVc2VyczoAZWxlZ2lvczoARG9jdW1lbnRzOgBQYXBlcnM6AE1hdHNha2lzOgBUaGUgcnVzdCBsYW5ndWFnZS5wZGYAAA4ALAAVAFQAaABlACAAcgB1AHMAdAAgAGwAYQBuAGcAdQBhAGcAZQAuAHAAZABmAA8ACgAEAFIAbwBvAHQAEgA9VXNlcnMvZWxlZ2lvcy9Eb2N1bWVudHMvUGFwZXJzL01hdHNha2lzL1RoZSBydXN0IGxhbmd1YWdlLnBkZgAAEwABLwAAFQACAA7//wAAgAbSGxwdHlokY2xhc3NuYW1lWCRjbGFzc2VzXU5TTXV0YWJsZURhdGGjHR8gVk5TRGF0YVhOU09iamVjdNIbHCIjXE5TRGljdGlvbmFyeaIiIF8QD05TS2V5ZWRBcmNoaXZlctEmJ1Ryb290gAEACAARABoAIwAtADIANwBAAEYATQBVAGAAZwBqAGwAbgBxAHMAdQB3AIQAjgDJAM4A1gKIAooCjwKaAqMCsQK1ArwCxQLKAtcC2gLsAu8C9AAAAAAAAAIBAAAAAAAAACgAAAAAAAAAAAAAAAAAAAL2}}

@inproceedings{Hickey2008The-Clojure-pro,
	Address = {New York, New York, USA},
	Author = {Hickey, Rich},
	Booktitle = {Proceedings of the 2008 symposium on Dynamic languages - DLS '08},
	Date-Added = {2018-01-01 13:50:37 +0000},
	Date-Modified = {2018-01-01 14:03:54 +0000},
	Doi = {10.1145/1408681.1408682},
	Isbn = {9781605582702},
	Pages = {1--1},
	Publisher = {ACM Press},
	Title = {{The Clojure programming language}},
	Url = {http://portal.acm.org/citation.cfm?doid=1408681.1408682},
	Year = {2008},
	Bdsk-Url-1 = {http://portal.acm.org/citation.cfm?doid=1408681.1408682},
	Bdsk-Url-2 = {https://dx.doi.org/10.1145/1408681.1408682}}

@techreport{Flatt2010Reference:-Rack,
	Annote = {$\backslash$url{\{}https://racket-lang.org/tr1/{\}}},
	Author = {Flatt, Matthew and PLT},
	Date-Added = {2018-01-01 13:49:41 +0000},
	Date-Modified = {2018-01-01 14:03:54 +0000},
	Institution = {PLT Design Inc.},
	Number = {PLT-TR-2010-1},
	Title = {{Reference: Racket}},
	Year = {2010}}

@inproceedings{Flatt2016Binding-As-Sets,
	Acmid = {2837620},
	Address = {New York, NY, USA},
	Author = {Flatt, Matthew},
	Booktitle = {Proceedings of the 43rd Annual ACM SIGPLAN-SIGACT Symposium on Principles of Programming Languages},
	Date-Added = {2018-01-01 13:47:51 +0000},
	Date-Modified = {2018-01-01 14:03:54 +0000},
	Doi = {10.1145/2837614.2837620},
	Isbn = {978-1-4503-3549-2},
	Keywords = {Macros, binding, hygiene, scope},
	Location = {St. Petersburg, FL, USA},
	Numpages = {13},
	Pages = {705--717},
	Publisher = {ACM},
	Series = {POPL '16},
	Title = {Binding As Sets of Scopes},
	Url = {http://doi.acm.org.focus.lib.kth.se/10.1145/2837614.2837620},
	Year = {2016},
	Bdsk-Url-1 = {http://doi.acm.org.focus.lib.kth.se/10.1145/2837614.2837620},
	Bdsk-Url-2 = {https://dx.doi.org/10.1145/2837614.2837620},
	Bdsk-File-1 = {YnBsaXN0MDDUAQIDBAUGJCVYJHZlcnNpb25YJG9iamVjdHNZJGFyY2hpdmVyVCR0b3ASAAGGoKgHCBMUFRYaIVUkbnVsbNMJCgsMDxJXTlMua2V5c1pOUy5vYmplY3RzViRjbGFzc6INDoACgAOiEBGABIAFgAdccmVsYXRpdmVQYXRoWWFsaWFzRGF0YV8QPS4uLy4uLy4uL0RvY3VtZW50cy9QYXBlcnMvRmxhdHQvQmluZGluZyBBcyBTZXRzIG9mIFNjb3Blcy5wZGbSFwsYGVdOUy5kYXRhTxEBxAAAAAABxAACAAAEUm9vdAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAyuwKYEgrAAADceaNHUJpbmRpbmcgQXMgU2V0cyBvZiBTY29wZXMucGRmAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAANx5mzWb/qzAAAAAAAAAAAAAwAEAAAJIAAAAAAAAAAAAAAAAAAAAAVGbGF0dAAAEAAIAADK6/xQAAAAEQAIAADWb+yjAAAAAQAUA3HmjQNx5FwABR8kAAUfIwAAwEMAAgBMUm9vdDpVc2VyczoAZWxlZ2lvczoARG9jdW1lbnRzOgBQYXBlcnM6AEZsYXR0OgBCaW5kaW5nIEFzIFNldHMgb2YgU2NvcGVzLnBkZgAOADwAHQBCAGkAbgBkAGkAbgBnACAAQQBzACAAUwBlAHQAcwAgAG8AZgAgAFMAYwBvAHAAZQBzAC4AcABkAGYADwAKAAQAUgBvAG8AdAASAEJVc2Vycy9lbGVnaW9zL0RvY3VtZW50cy9QYXBlcnMvRmxhdHQvQmluZGluZyBBcyBTZXRzIG9mIFNjb3Blcy5wZGYAEwABLwAAFQACAA7//wAAgAbSGxwdHlokY2xhc3NuYW1lWCRjbGFzc2VzXU5TTXV0YWJsZURhdGGjHR8gVk5TRGF0YVhOU09iamVjdNIbHCIjXE5TRGljdGlvbmFyeaIiIF8QD05TS2V5ZWRBcmNoaXZlctEmJ1Ryb290gAEACAARABoAIwAtADIANwBAAEYATQBVAGAAZwBqAGwAbgBxAHMAdQB3AIQAjgDOANMA2wKjAqUCqgK1Ar4CzALQAtcC4ALlAvIC9QMHAwoDDwAAAAAAAAIBAAAAAAAAACgAAAAAAAAAAAAAAAAAAAMR}}

@inbook{Neron2015A-Theory-of-Nam,
	Abstract = {We describe a language-independent theory for name binding and resolution, suitable for programming languages with complex scoping rules including both lexical scoping and modules. We formulate name resolution as a two-stage problem. First a language-independent scope graph is constructed using language-specific rules from an abstract syntax tree. Then references in the scope graph are resolved to corresponding declarations using a language-independent resolution process. We introduce a resolution calculus as a concise, declarative, and languageindependent specification of name resolution. We develop a resolution algorithm that is sound and complete with respect to the calculus. Based on the resolution calculus we develop language-independent definitions of $\alpha$-equivalence and rename refactoring. We illustrate the approach using a small example language with modules. In addition, we show how our approach provides a model for a range of name binding patterns in existing languages.},
	Address = {Berlin, Heidelberg},
	Author = {Neron, Pierre and Tolmach, Andrew and Visser, Eelco and Wachsmuth, Guido},
	Booktitle = {Programming Languages and Systems: 24th European Symposium on Programming, ESOP 2015, Held as Part of the European Joint Conferences on Theory and Practice of Software, ETAPS 2015, London, UK, April 11-18, 2015, Proceedings},
	Date-Added = {2018-01-01 13:34:52 +0000},
	Date-Modified = {2018-01-01 14:03:54 +0000},
	Doi = {10.1007/978-3-662-46669-8_9},
	Editor = {Vitek, Jan},
	Isbn = {978-3-662-46669-8},
	Pages = {205--231},
	Publisher = {Springer Berlin Heidelberg},
	Title = {A Theory of Name Resolution},
	Url = {https://doi.org/10.1007/978-3-662-46669-8_9},
	Year = {2015},
	Bdsk-Url-1 = {https://doi.org/10.1007/978-3-662-46669-8_9},
	Bdsk-File-1 = {YnBsaXN0MDDUAQIDBAUGJCVYJHZlcnNpb25YJG9iamVjdHNZJGFyY2hpdmVyVCR0b3ASAAGGoKgHCBMUFRYaIVUkbnVsbNMJCgsMDxJXTlMua2V5c1pOUy5vYmplY3RzViRjbGFzc6INDoACgAOiEBGABIAFgAdccmVsYXRpdmVQYXRoWWFsaWFzRGF0YV8QTS4uLy4uLy4uL0RvY3VtZW50cy9QYXBlcnMvTmVyb24vQSBUaGVvcnkgb2YgTmFtZSBSZXNvbHV0aW9uIChwcCAyMDUtLTIzMSkucGRm0hcLGBlXTlMuZGF0YU8RAfYAAAAAAfYAAgAABFJvb3QAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMrsCmBIKwAAA3HkXR9BIFRoZW9yeSBvZiBOYW1lIFJlIzM3MUU0NDEucGRmAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADceRB1m/3owAAAAAAAAAAAAMABAAACSAAAAAAAAAAAAAAAAAAAAAFTmVyb24AABAACAAAyuv8UAAAABEACAAA1m/pkwAAAAEAFANx5F0DceRcAAUfJAAFHyMAAMBDAAIATlJvb3Q6VXNlcnM6AGVsZWdpb3M6AERvY3VtZW50czoAUGFwZXJzOgBOZXJvbjoAQSBUaGVvcnkgb2YgTmFtZSBSZSMzNzFFNDQxLnBkZgAOAFwALQBBACAAVABoAGUAbwByAHkAIABvAGYAIABOAGEAbQBlACAAUgBlAHMAbwBsAHUAdABpAG8AbgAgACgAcABwACAAMgAwADUALQAtADIAMwAxACkALgBwAGQAZgAPAAoABABSAG8AbwB0ABIAUlVzZXJzL2VsZWdpb3MvRG9jdW1lbnRzL1BhcGVycy9OZXJvbi9BIFRoZW9yeSBvZiBOYW1lIFJlc29sdXRpb24gKHBwIDIwNS0tMjMxKS5wZGYAEwABLwAAFQACAA7//wAAgAbSGxwdHlokY2xhc3NuYW1lWCRjbGFzc2VzXU5TTXV0YWJsZURhdGGjHR8gVk5TRGF0YVhOU09iamVjdNIbHCIjXE5TRGljdGlvbmFyeaIiIF8QD05TS2V5ZWRBcmNoaXZlctEmJ1Ryb290gAEACAARABoAIwAtADIANwBAAEYATQBVAGAAZwBqAGwAbgBxAHMAdQB3AIQAjgDeAOMA6wLlAucC7AL3AwADDgMSAxkDIgMnAzQDNwNJA0wDUQAAAAAAAAIBAAAAAAAAACgAAAAAAAAAAAAAAAAAAANT}}

@inproceedings{Antwerpen2016A-Constraint-La,
	Acmid = {2847543},
	Address = {New York, NY, USA},
	Author = {Antwerpen, Hendrik van and N{\'e}ron, Pierre and Tolmach, Andrew and Visser, Eelco and Wachsmuth, Guido},
	Booktitle = {Proceedings of the 2016 ACM SIGPLAN Workshop on Partial Evaluation and Program Manipulation},
	Date-Added = {2018-01-01 13:31:12 +0000},
	Date-Modified = {2018-01-01 14:03:54 +0000},
	Doi = {10.1145/2847538.2847543},
	Isbn = {978-1-4503-4097-7},
	Keywords = {Domain Specific Languages, Language Specification, Meta-Theory, Name Binding, Types},
	Location = {St. Petersburg, FL, USA},
	Numpages = {12},
	Pages = {49--60},
	Publisher = {ACM},
	Series = {PEPM '16},
	Title = {A Constraint Language for Static Semantic Analysis Based on Scope Graphs},
	Url = {http://doi.acm.org/10.1145/2847538.2847543},
	Year = {2016},
	Bdsk-Url-1 = {http://doi.acm.org/10.1145/2847538.2847543},
	Bdsk-Url-2 = {https://dx.doi.org/10.1145/2847538.2847543},
	Bdsk-File-1 = {YnBsaXN0MDDUAQIDBAUGJCVYJHZlcnNpb25YJG9iamVjdHNZJGFyY2hpdmVyVCR0b3ASAAGGoKgHCBMUFRYaIVUkbnVsbNMJCgsMDxJXTlMua2V5c1pOUy5vYmplY3RzViRjbGFzc6INDoACgAOiEBGABIAFgAdccmVsYXRpdmVQYXRoWWFsaWFzRGF0YV8QWi4uLy4uLy4uL0RvY3VtZW50cy9QYXBlcnMvQW50d2VycGVuL0EgQ29uc3RyYWludCBMYW5ndWFnZSBmb3IgU3RhdGljIFNlbWFudGljIEFuYWx5c2lzLnBkZtIXCxgZV05TLmRhdGFPEQIeAAAAAAIeAAIAAARSb290AAAAAAAAAAAAAAAAAAAAAAAAAAAAAADK7ApgSCsAAANx5RwfQSBDb25zdHJhaW50IExhbmd1YSMzNzFFNTAwLnBkZgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA3HlANZv+BYAAAAAAAAAAAADAAQAAAkgAAAAAAAAAAAAAAAAAAAACUFudHdlcnBlbgAAEAAIAADK6/xQAAAAEQAIAADWb+oGAAAAAQAUA3HlHANx5FwABR8kAAUfIwAAwEMAAgBSUm9vdDpVc2VyczoAZWxlZ2lvczoARG9jdW1lbnRzOgBQYXBlcnM6AEFudHdlcnBlbjoAQSBDb25zdHJhaW50IExhbmd1YSMzNzFFNTAwLnBkZgAOAG4ANgBBACAAQwBvAG4AcwB0AHIAYQBpAG4AdAAgAEwAYQBuAGcAdQBhAGcAZQAgAGYAbwByACAAUwB0AGEAdABpAGMAIABTAGUAbQBhAG4AdABpAGMAIABBAG4AYQBsAHkAcwBpAHMALgBwAGQAZgAPAAoABABSAG8AbwB0ABIAX1VzZXJzL2VsZWdpb3MvRG9jdW1lbnRzL1BhcGVycy9BbnR3ZXJwZW4vQSBDb25zdHJhaW50IExhbmd1YWdlIGZvciBTdGF0aWMgU2VtYW50aWMgQW5hbHlzaXMucGRmAAATAAEvAAAVAAIADv//AACABtIbHB0eWiRjbGFzc25hbWVYJGNsYXNzZXNdTlNNdXRhYmxlRGF0YaMdHyBWTlNEYXRhWE5TT2JqZWN00hscIiNcTlNEaWN0aW9uYXJ5oiIgXxAPTlNLZXllZEFyY2hpdmVy0SYnVHJvb3SAAQAIABEAGgAjAC0AMgA3AEAARgBNAFUAYABnAGoAbABuAHEAcwB1AHcAhACOAOsA8AD4AxoDHAMhAywDNQNDA0cDTgNXA1wDaQNsA34DgQOGAAAAAAAAAgEAAAAAAAAAKAAAAAAAAAAAAAAAAAAAA4g=}}
